============================= test session starts ==============================
platform linux -- Python 3.9.16, pytest-7.4.0, pluggy-1.2.0 -- /opt/conda/envs/gdf/bin/python3.9
cachedir: .pytest_cache
rootdir: /usr/src/ucx-py
configfile: pyproject.toml
plugins: asyncio-0.12.0
collecting ... collected 8 items

debug-tests/test_send_recv_many_workers.py::test_send_recv_cu[True-dataframe] [0, 1, 2, 3, 4, 5, 6, 7]
/usr/src/ucx-py/debug-tests/utils.py:80: FutureWarning: In the future `np.bool` will be defined as the corresponding NumPy scalar.
  [hasattr(f, "__cuda_array_interface__") for f in frames], dtype=np.bool
/usr/src/ucx-py/debug-tests/utils.py:99: FutureWarning: In the future `np.bool` will be defined as the corresponding NumPy scalar.
  is_cudas = np.empty(nframes[0], dtype=np.bool)
Process client_1:
Task exception was never retrieved
future: <Task finished name='Task-4' coro=<_listener_handler_coroutine() done, defined at /opt/conda/envs/gdf/lib/python3.9/site-packages/ucp/core.py:128> exception=AttributeError("module 'numpy' has no attribute 'bool'.\n`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.\nThe aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:\n    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations")>
Traceback (most recent call last):
  File "/opt/conda/envs/gdf/lib/python3.9/site-packages/ucp/core.py", line 178, in _listener_handler_coroutine
    await func(ep)
  File "/usr/src/ucx-py/debug-tests/test_send_recv_many_workers.py", line 129, in write
    await send(ep, _frames)
  File "/usr/src/ucx-py/debug-tests/utils.py", line 80, in send
    [hasattr(f, "__cuda_array_interface__") for f in frames], dtype=np.bool
  File "/opt/conda/envs/gdf/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
Traceback (most recent call last):
  File "/opt/conda/envs/gdf/lib/python3.9/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/opt/conda/envs/gdf/lib/python3.9/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/src/ucx-py/debug-tests/test_send_recv_many_workers.py", line 72, in client
    get_event_loop().run_until_complete(read())
  File "/opt/conda/envs/gdf/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/usr/src/ucx-py/debug-tests/test_send_recv_many_workers.py", line 61, in read
    frames, msg = await recv(ep)
  File "/usr/src/ucx-py/debug-tests/utils.py", line 99, in recv
    is_cudas = np.empty(nframes[0], dtype=np.bool)
  File "/opt/conda/envs/gdf/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
ITER:  0
/usr/src/ucx-py/debug-tests/utils.py:80: FutureWarning: In the future `np.bool` will be defined as the corresponding NumPy scalar.
  [hasattr(f, "__cuda_array_interface__") for f in frames], dtype=np.bool
Task exception was never retrieved
future: <Task finished name='Task-6' coro=<_listener_handler_coroutine() done, defined at /opt/conda/envs/gdf/lib/python3.9/site-packages/ucp/core.py:128> exception=AttributeError("module 'numpy' has no attribute 'bool'.\n`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.\nThe aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:\n    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations")>
Traceback (most recent call last):
  File "/opt/conda/envs/gdf/lib/python3.9/site-packages/ucp/core.py", line 178, in _listener_handler_coroutine
    await func(ep)
  File "/usr/src/ucx-py/debug-tests/test_send_recv_many_workers.py", line 129, in write
    await send(ep, _frames)
  File "/usr/src/ucx-py/debug-tests/utils.py", line 80, in send
    [hasattr(f, "__cuda_array_interface__") for f in frames], dtype=np.bool
  File "/opt/conda/envs/gdf/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
/usr/src/ucx-py/debug-tests/utils.py:99: FutureWarning: In the future `np.bool` will be defined as the corresponding NumPy scalar.
  is_cudas = np.empty(nframes[0], dtype=np.bool)
/usr/src/ucx-py/debug-tests/utils.py:80: FutureWarning: In the future `np.bool` will be defined as the corresponding NumPy scalar.
  [hasattr(f, "__cuda_array_interface__") for f in frames], dtype=np.bool
Task exception was never retrieved
future: <Task finished name='Task-3' coro=<_listener_handler_coroutine() done, defined at /opt/conda/envs/gdf/lib/python3.9/site-packages/ucp/core.py:128> exception=AttributeError("module 'numpy' has no attribute 'bool'.\n`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.\nThe aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:\n    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations")>
Traceback (most recent call last):
  File "/opt/conda/envs/gdf/lib/python3.9/site-packages/ucp/core.py", line 178, in _listener_handler_coroutine
    await func(ep)
  File "/usr/src/ucx-py/debug-tests/test_send_recv_many_workers.py", line 129, in write
    await send(ep, _frames)
  File "/usr/src/ucx-py/debug-tests/utils.py", line 80, in send
    [hasattr(f, "__cuda_array_interface__") for f in frames], dtype=np.bool
  File "/opt/conda/envs/gdf/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
/usr/src/ucx-py/debug-tests/utils.py:99: FutureWarning: In the future `np.bool` will be defined as the corresponding NumPy scalar.
  is_cudas = np.empty(nframes[0], dtype=np.bool)
Process client_4:
Traceback (most recent call last):
  File "/opt/conda/envs/gdf/lib/python3.9/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/opt/conda/envs/gdf/lib/python3.9/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/src/ucx-py/debug-tests/test_send_recv_many_workers.py", line 72, in client
    get_event_loop().run_until_complete(read())
  File "/opt/conda/envs/gdf/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/usr/src/ucx-py/debug-tests/test_send_recv_many_workers.py", line 61, in read
    frames, msg = await recv(ep)
  File "/usr/src/ucx-py/debug-tests/utils.py", line 99, in recv
    is_cudas = np.empty(nframes[0], dtype=np.bool)
  File "/opt/conda/envs/gdf/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
Process client_5:
ITER:  0
Traceback (most recent call last):
  File "/opt/conda/envs/gdf/lib/python3.9/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/opt/conda/envs/gdf/lib/python3.9/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/src/ucx-py/debug-tests/test_send_recv_many_workers.py", line 72, in client
    get_event_loop().run_until_complete(read())
  File "/opt/conda/envs/gdf/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/usr/src/ucx-py/debug-tests/test_send_recv_many_workers.py", line 61, in read
    frames, msg = await recv(ep)
  File "/usr/src/ucx-py/debug-tests/utils.py", line 99, in recv
    is_cudas = np.empty(nframes[0], dtype=np.bool)
  File "/opt/conda/envs/gdf/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
ITER:  0
/usr/src/ucx-py/debug-tests/utils.py:80: FutureWarning: In the future `np.bool` will be defined as the corresponding NumPy scalar.
  [hasattr(f, "__cuda_array_interface__") for f in frames], dtype=np.bool
/usr/src/ucx-py/debug-tests/utils.py:99: FutureWarning: In the future `np.bool` will be defined as the corresponding NumPy scalar.
  is_cudas = np.empty(nframes[0], dtype=np.bool)
Process client_0:
Task exception was never retrieved
future: <Task finished name='Task-17' coro=<_listener_handler_coroutine() done, defined at /opt/conda/envs/gdf/lib/python3.9/site-packages/ucp/core.py:128> exception=AttributeError("module 'numpy' has no attribute 'bool'.\n`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.\nThe aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:\n    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations")>
Traceback (most recent call last):
  File "/opt/conda/envs/gdf/lib/python3.9/site-packages/ucp/core.py", line 178, in _listener_handler_coroutine
    await func(ep)
  File "/usr/src/ucx-py/debug-tests/test_send_recv_many_workers.py", line 129, in write
    await send(ep, _frames)
  File "/usr/src/ucx-py/debug-tests/utils.py", line 80, in send
    [hasattr(f, "__cuda_array_interface__") for f in frames], dtype=np.bool
  File "/opt/conda/envs/gdf/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
Traceback (most recent call last):
  File "/opt/conda/envs/gdf/lib/python3.9/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/opt/conda/envs/gdf/lib/python3.9/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/src/ucx-py/debug-tests/test_send_recv_many_workers.py", line 72, in client
    get_event_loop().run_until_complete(read())
  File "/opt/conda/envs/gdf/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/usr/src/ucx-py/debug-tests/test_send_recv_many_workers.py", line 61, in read
    frames, msg = await recv(ep)
  File "/usr/src/ucx-py/debug-tests/utils.py", line 99, in recv
    is_cudas = np.empty(nframes[0], dtype=np.bool)
  File "/opt/conda/envs/gdf/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
ITER:  0
Future exception was never retrieved
future: <Future finished exception=UCXCanceled('<[Recv shutdown] ep: 0x7fcf3c006080, tag: 0x2b379d1e2291d2f3>: ')>
ucp._libs.exceptions.UCXCanceled: <[Recv shutdown] ep: 0x7fcf3c006080, tag: 0x2b379d1e2291d2f3>: 
/usr/src/ucx-py/debug-tests/utils.py:80: FutureWarning: In the future `np.bool` will be defined as the corresponding NumPy scalar.
  [hasattr(f, "__cuda_array_interface__") for f in frames], dtype=np.bool
Task exception was never retrieved
future: <Task finished name='Task-16' coro=<_listener_handler_coroutine() done, defined at /opt/conda/envs/gdf/lib/python3.9/site-packages/ucp/core.py:128> exception=AttributeError("module 'numpy' has no attribute 'bool'.\n`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.\nThe aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:\n    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations")>
Traceback (most recent call last):
  File "/opt/conda/envs/gdf/lib/python3.9/site-packages/ucp/core.py", line 178, in _listener_handler_coroutine
    await func(ep)
  File "/usr/src/ucx-py/debug-tests/test_send_recv_many_workers.py", line 129, in write
    await send(ep, _frames)
  File "/usr/src/ucx-py/debug-tests/utils.py", line 80, in send
    [hasattr(f, "__cuda_array_interface__") for f in frames], dtype=np.bool
  File "/opt/conda/envs/gdf/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
/usr/src/ucx-py/debug-tests/utils.py:99: FutureWarning: In the future `np.bool` will be defined as the corresponding NumPy scalar.
  is_cudas = np.empty(nframes[0], dtype=np.bool)
Process client_7:
Traceback (most recent call last):
  File "/opt/conda/envs/gdf/lib/python3.9/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/opt/conda/envs/gdf/lib/python3.9/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/src/ucx-py/debug-tests/test_send_recv_many_workers.py", line 72, in client
    get_event_loop().run_until_complete(read())
  File "/opt/conda/envs/gdf/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/usr/src/ucx-py/debug-tests/test_send_recv_many_workers.py", line 61, in read
    frames, msg = await recv(ep)
  File "/usr/src/ucx-py/debug-tests/utils.py", line 99, in recv
    is_cudas = np.empty(nframes[0], dtype=np.bool)
  File "/opt/conda/envs/gdf/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
ITER:  0
/usr/src/ucx-py/debug-tests/utils.py:80: FutureWarning: In the future `np.bool` will be defined as the corresponding NumPy scalar.
  [hasattr(f, "__cuda_array_interface__") for f in frames], dtype=np.bool
Task exception was never retrieved
future: <Task finished name='Task-18' coro=<_listener_handler_coroutine() done, defined at /opt/conda/envs/gdf/lib/python3.9/site-packages/ucp/core.py:128> exception=AttributeError("module 'numpy' has no attribute 'bool'.\n`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.\nThe aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:\n    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations")>
Traceback (most recent call last):
  File "/opt/conda/envs/gdf/lib/python3.9/site-packages/ucp/core.py", line 178, in _listener_handler_coroutine
    await func(ep)
  File "/usr/src/ucx-py/debug-tests/test_send_recv_many_workers.py", line 129, in write
    await send(ep, _frames)
  File "/usr/src/ucx-py/debug-tests/utils.py", line 80, in send
    [hasattr(f, "__cuda_array_interface__") for f in frames], dtype=np.bool
  File "/opt/conda/envs/gdf/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
/usr/src/ucx-py/debug-tests/utils.py:99: FutureWarning: In the future `np.bool` will be defined as the corresponding NumPy scalar.
  is_cudas = np.empty(nframes[0], dtype=np.bool)
/usr/src/ucx-py/debug-tests/utils.py:80: FutureWarning: In the future `np.bool` will be defined as the corresponding NumPy scalar.
  [hasattr(f, "__cuda_array_interface__") for f in frames], dtype=np.bool
Process client_3:
Task exception was never retrieved
future: <Task finished name='Task-19' coro=<_listener_handler_coroutine() done, defined at /opt/conda/envs/gdf/lib/python3.9/site-packages/ucp/core.py:128> exception=AttributeError("module 'numpy' has no attribute 'bool'.\n`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.\nThe aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:\n    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations")>
Traceback (most recent call last):
  File "/opt/conda/envs/gdf/lib/python3.9/site-packages/ucp/core.py", line 178, in _listener_handler_coroutine
    await func(ep)
  File "/usr/src/ucx-py/debug-tests/test_send_recv_many_workers.py", line 129, in write
    await send(ep, _frames)
  File "/usr/src/ucx-py/debug-tests/utils.py", line 80, in send
    [hasattr(f, "__cuda_array_interface__") for f in frames], dtype=np.bool
  File "/opt/conda/envs/gdf/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
/usr/src/ucx-py/debug-tests/utils.py:99: FutureWarning: In the future `np.bool` will be defined as the corresponding NumPy scalar.
  is_cudas = np.empty(nframes[0], dtype=np.bool)
Traceback (most recent call last):
  File "/opt/conda/envs/gdf/lib/python3.9/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/opt/conda/envs/gdf/lib/python3.9/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/src/ucx-py/debug-tests/test_send_recv_many_workers.py", line 72, in client
    get_event_loop().run_until_complete(read())
  File "/opt/conda/envs/gdf/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/usr/src/ucx-py/debug-tests/test_send_recv_many_workers.py", line 61, in read
    frames, msg = await recv(ep)
  File "/usr/src/ucx-py/debug-tests/utils.py", line 99, in recv
    is_cudas = np.empty(nframes[0], dtype=np.bool)
  File "/opt/conda/envs/gdf/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
ITER:  0
Process client_6:
/usr/src/ucx-py/debug-tests/utils.py:80: FutureWarning: In the future `np.bool` will be defined as the corresponding NumPy scalar.
  [hasattr(f, "__cuda_array_interface__") for f in frames], dtype=np.bool
Task exception was never retrieved
future: <Task finished name='Task-20' coro=<_listener_handler_coroutine() done, defined at /opt/conda/envs/gdf/lib/python3.9/site-packages/ucp/core.py:128> exception=AttributeError("module 'numpy' has no attribute 'bool'.\n`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.\nThe aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:\n    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations")>
Traceback (most recent call last):
  File "/opt/conda/envs/gdf/lib/python3.9/site-packages/ucp/core.py", line 178, in _listener_handler_coroutine
    await func(ep)
  File "/usr/src/ucx-py/debug-tests/test_send_recv_many_workers.py", line 129, in write
    await send(ep, _frames)
  File "/usr/src/ucx-py/debug-tests/utils.py", line 80, in send
    [hasattr(f, "__cuda_array_interface__") for f in frames], dtype=np.bool
  File "/opt/conda/envs/gdf/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
Traceback (most recent call last):
  File "/opt/conda/envs/gdf/lib/python3.9/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/opt/conda/envs/gdf/lib/python3.9/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/src/ucx-py/debug-tests/test_send_recv_many_workers.py", line 72, in client
    get_event_loop().run_until_complete(read())
  File "/opt/conda/envs/gdf/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/usr/src/ucx-py/debug-tests/test_send_recv_many_workers.py", line 61, in read
    frames, msg = await recv(ep)
  File "/usr/src/ucx-py/debug-tests/utils.py", line 99, in recv
    is_cudas = np.empty(nframes[0], dtype=np.bool)
  File "/opt/conda/envs/gdf/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
/usr/src/ucx-py/debug-tests/utils.py:99: FutureWarning: In the future `np.bool` will be defined as the corresponding NumPy scalar.
  is_cudas = np.empty(nframes[0], dtype=np.bool)
ITER:  0
Process client_2:
Traceback (most recent call last):
  File "/opt/conda/envs/gdf/lib/python3.9/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/opt/conda/envs/gdf/lib/python3.9/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/src/ucx-py/debug-tests/test_send_recv_many_workers.py", line 72, in client
    get_event_loop().run_until_complete(read())
  File "/opt/conda/envs/gdf/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/usr/src/ucx-py/debug-tests/test_send_recv_many_workers.py", line 61, in read
    frames, msg = await recv(ep)
  File "/usr/src/ucx-py/debug-tests/utils.py", line 99, in recv
    is_cudas = np.empty(nframes[0], dtype=np.bool)
  File "/opt/conda/envs/gdf/lib/python3.9/site-packages/numpy/__init__.py", line 305, in __getattr__
    raise AttributeError(__former_attrs__[attr])
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
ITER:  0
Future exception was never retrieved
future: <Future finished exception=UCXCanceled('<[Recv shutdown] ep: 0x7fbe49c0e080, tag: 0x980c3324add432>: ')>
ucp._libs.exceptions.UCXCanceled: <[Recv shutdown] ep: 0x7fbe49c0e080, tag: 0x980c3324add432>: 
Future exception was never retrieved
future: <Future finished exception=UCXCanceled('<[Recv shutdown] ep: 0x7fe14543c080, tag: 0x5d7bfca52d541f87>: ')>
ucp._libs.exceptions.UCXCanceled: <[Recv shutdown] ep: 0x7fe14543c080, tag: 0x5d7bfca52d541f87>: 
